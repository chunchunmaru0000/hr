#######################################################################################
# 								COMPILER
#######################################################################################
args to compiler

#######################################################################################
# 								ENUM
#######################################################################################
UNREPEATABLE flag for an enum

#######################################################################################
# 								ASM
#######################################################################################
let a, b, c, d byte "hello world"
so plist of names in let statement of the assembly

#######################################################################################
# 								ARGS
#######################################################################################
do ',' fun arg types like the ones that are possible in function signature but
function variable signature

*ч32 == *[ч32], so arr type is equal to just the type, array only haves size
#######################################################################################
# 								COMMENTS
#######################################################################################
source code comments in assembly, need to get the last token of an instruction also

#######################################################################################
# 								ATOMAR THINGS
#######################################################################################
атом ( ... )

#######################################################################################
# 								UNDEF
#######################################################################################
when i will have defns as a dictionary then i can do maybe #undef

#######################################################################################
# 								PIPELINE
#######################################################################################
pipeline operator with tuple expressions, tuples are just bunch of args, its just some
abstract value, not like struct or array
() |> f
(a,) |> f
(a, b) |> f

value |> f

or just with single value

f a, b,
a, |> f

#######################################################################################
# 			INLINE MACRO OR ANONIMOUS FUNS
#######################################################################################
пусть ( а: ч32 )
а =
    2
    |> фц ( х: ч32 ) ч32 ( х * х )
    |> фц ( х: ч32 ) ч32 ( х + х )

пусть ( ф: (ч32 ч32) )
ф = фц ( х: ч32 ) ч32 (
    ; вот тут уже между анонимными функциями и основной функции должны
    ; тоже быть области видимости
    пусть ( у: ч32 )
    у = х
    х = 123
    х += у * у
)
